name: CI (Alt)

on:
  workflow_dispatch:
    inputs:
      ROM_LINK:
        description: "Direct Link of ROM/Firmware"
        required: true

env:
  ROM_LINK: ${{ github.event.inputs.ROM_LINK }}
  GIT_ORG: "DroidDumps"
  TG_TOKEN: ${{ secrets.TG_TOKEN }}
  CHAT_ID: ${{ secrets.CHAT_ID }}
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  dump:
    runs-on: ubuntu-latest

    steps:
      - name: Set Git Configs & Secrets
        uses: rokibhasansagar/custom_workflows/git_config@main
        with:
          credential: "yes"
          git_cookies: "no"
        env:
          PAT: ${{ secrets.GH_TOKEN }}
      - name: Dump Firmware
        run: |
          # Cleanup Space [Inherits inline block groups, so avoid adding another here]
          export cleanerAddr="https://gist.github.com/rokibhasansagar/27271d28d0d6fa2d4a8d3b6253ffb5cd"
          export cleanRef=$(git ls-remote -q "${cleanerAddr}" HEAD | awk '{print $1}')
          export ROOT_RESERVE_MB=10240 TEMP_RESERVE_MB=10240
          ( curl -sL --retry 8 --retry-connrefused "${cleanerAddr}/raw/${cleanRef}/maximize.space.sh" | bash 2>/dev/null )
          # Run dumper in unified volume
          mkdir -p /data/job && cd /data/job
          echo "::group:: Preparing Dumper"
          git clone -q --depth=1 --filter=blob:none https://github.com/DumprX/DumprX.git
          cd DumprX
          sed -i '/astral/d' ./setup.sh
          sudo -EH bash ./setup.sh || exit 1
          sudo apt-get install neofetch -qy
          bash -c "$(curl -sL https://astral.sh/uv/install.sh)"
          ls -lAog ${HOME}/.local/bin/
          . ~/.bashrc
          echo "$GITHUB_TOKEN" > .github_token
          echo "$GIT_ORG" > .github_orgname
          echo "$TG_TOKEN" > .tg_token
          echo "$CHAT_ID" > .tg_chat
          echo "::endgroup::"
          echo "::group:: [DUMP JOB]"
          ./dumper.sh "${ROM_LINK}" || exit 1
          echo "::endgroup::"

